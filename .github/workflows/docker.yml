name: Docker Release

on:
  workflow_call:
    inputs:
      publish:
        required: false
        default: false
        type: boolean
      cryptobox_image:
        required: true
        type: string
      runtime_image:
        required: true
        type: string
      platforms:
        required: true
        type: string
    secrets:
      docker_password:
        required: true
      webhook:
        required: true

jobs:
  docker_release:
    name: Release Docker Cryptobox & Runtime
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Set Release Version
        # use the version specified in the pom.xml as the tag
        run: |
          export MVN_VERSION=$(mvn -q \
              -Dexec.executable=echo \
              -Dexec.args='${project.version}' \
              --non-recursive \
              exec:exec)
          echo "RELEASE_VERSION=${MVN_VERSION}" >> $GITHUB_ENV

      # extract metadata for labels https://github.com/docker/metadata-action
      - name: Docker meta Cryptobox
        id: meta_cryptobox
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.cryptobox_image }}

      # extract metadata for labels https://github.com/docker/metadata-action
      - name: Docker meta Runtime
        id: meta_runtime
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.runtime_image }}

        # setup docker actions https://github.com/docker/build-push-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: wirebot
          password: ${{ secrets.docker_password }}

      - name: Build Cryptobox
        uses: docker/build-push-action@v3
        with:
          file: dockerfiles/Dockerfile
          context: .
          target: cryptobox
          tags: ${{ inputs.cryptobox_image }}:latest, ${{ inputs.cryptobox_image }}:${{ env.RELEASE_VERSION }}
          labels: ${{ steps.meta_cryptobox.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.publish }}

      - name: Build Runtime
        uses: docker/build-push-action@v3
        with:
          file: dockerfiles/Dockerfile
          context: .
          target: runtime
          tags: ${{ inputs.runtime_image }}:latest, ${{ inputs.runtime_image }}:${{ env.RELEASE_VERSION }}
          labels: ${{ steps.meta_runtime.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.publish }}

      # Send webhook to Wire using Slack Bot
      - name: Webhook to Wire
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Cryptobox4j - Wire Bot Runtime Docker Release Platform ${{ inputs.platform }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.webhook }}
        if: failure()
